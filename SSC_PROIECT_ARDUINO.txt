#include <AFMotor.h>
AF_DCMotor motor1(1);
AF_DCMotor motor2(2);
AF_DCMotor motor3(3);
AF_DCMotor motor4(4);
int directie [5] = {0,0,0,0};
int i=0;
int functioneaza;
void setup() {
  Serial.begin(9600);
  motor1.setSpeed(200);
  motor1.run(RELEASE);
  motor2.setSpeed(200);
  motor2.run(RELEASE);
  motor3.setSpeed(200);
  motor3.run(RELEASE);
  motor4.setSpeed(200);
  motor4.run(RELEASE);
  functioneaza=0;
}

void loop() {

  int sensorValue0 = analogRead(A1);              // pornire
  float voltage0 = sensorValue0 * (5.0 / 1023.0);
  Serial.print("Sw = ");
  Serial.println(voltage0);                        
                                                   //directie |
                                                  //          V
  int sensorValue = analogRead(A2);
  float voltage = sensorValue * (5.0 / 1023.0);
  Serial.print("dir0 = ");
  Serial.println(voltage);
  int sensorValue1 = analogRead(A3);               
  float voltage1 = sensorValue1 * (5.0 / 1023.0);
  Serial.print("dir1 = ");
  Serial.println(voltage1);
  int sensorValue2 = analogRead(A4);
  float voltage2 = sensorValue2 * (5.0 / 1023.0);
  Serial.print("dir2 = ");
  Serial.println(voltage2);
  int sensorValue3 = analogRead(A5);
  float voltage3 = sensorValue3 * (5.0 / 1023.0);
  Serial.print("dir3 = ");
  Serial.println(voltage3);
                                                 //directie ^
                                                //          |
  if(voltage0>2.0){
    if(functioneaza==0){                            // functioneaza == 1 -> motoarele sunt active prin urmare nu mai trebuie pornite
      motor1.run(BACKWARD);                          // functioneaza == 0 -> motoarele sunt oprite prin urmare trebuie pornite
      motor2.run(BACKWARD);
      motor3.run(FORWARD);
      motor4.run(FORWARD);
      functioneaza=1;
    }
  }
  else{
    if(functioneaza==1){                                 
      motor1.run(RELEASE);                          
      motor2.run(RELEASE);
      motor3.run(RELEASE);
      motor4.run(RELEASE);
      functioneaza=0;
    }
  }
  
  if (voltage > 2.0) 
    directie[0]=1;
  else
    directie[0]=0;
  if (voltage1 > 2.0) 
    directie[1]=1;
  else
    directie[1]=0;
  if (voltage2 > 2.0) 
    directie[2]=1;
  else
    directie[2]=0;
  if (voltage3 > 2.0) 
    directie[3]=1;
  else
    directie[3]=0;
  
  // stop
  if(directie[0] == 0 && directie[1] == 0 && directie[2] == 0 && directie[3] == 0){
      
      motor1.setSpeed(0);
      motor2.setSpeed(0);
      motor3.setSpeed(0);
      motor4.setSpeed(0); 
  }

  // accelerare
  if(directie[0] == 0 && directie[1] == 0 && directie[2] == 1 && directie[3] == 1){
      for (i=0; i<200; i++) 
      {
        motor1.setSpeed(i);
        motor2.setSpeed(i);
        motor3.setSpeed(i);
        motor4.setSpeed(i);  
        delay(4);
      }
  }
  
  // forward
  if(directie[0] == 1 && directie[1] == 0 && directie[2] == 0 && directie[3] == 0){
      motor1.setSpeed(200);
      motor2.setSpeed(200);
      motor3.setSpeed(200);
      motor4.setSpeed(200);  
  }

    // decelerare
  if(directie[0] == 1 && directie[1] == 1 && directie[2] == 0 && directie[3] == 0){
      for (i=200; i<0; i--) 
      {
        motor1.setSpeed(i);
        motor2.setSpeed(i);
        motor3.setSpeed(i);
        motor4.setSpeed(i);  
        delay(1);
      }
  }
  
  // left
  if(directie[0] == 0 && directie[1] == 1 && directie[2] == 0 && directie[3] == 0){
     motor3.setSpeed(200);
     motor4.setSpeed(200);  
     delay(1000);

      
      motor1.run(FORWARD);                          // functioneaza == 0 -> motoarele sunt oprite prin urmare trebuie pornite
      motor2.run(FORWARD);
      motor1.setSpeed(200);
     motor2.setSpeed(200);  
     motor3.setSpeed(200);
     motor4.setSpeed(200);  
      delay(2000);
      motor1.run(BACKWARD);                          // functioneaza == 0 -> motoarele sunt oprite prin urmare trebuie pornite
      motor2.run(BACKWARD);
  }

  // right
  if(directie[0] == 0 && directie[1] == 0 && directie[2] == 1 && directie[3] == 0){
motor1.run(FORWARD);                          // functioneaza == 0 -> motoarele sunt oprite prin urmare trebuie pornite
      motor2.run(FORWARD);
      motor3.run(BACKWARD);
      motor4.run(BACKWARD);
     motor1.setSpeed(200);
     motor2.setSpeed(200);  
     motor3.setSpeed(200);
     motor4.setSpeed(200);    
     delay(1000);
     motor1.run(BACKWARD);                          // functioneaza == 0 -> motoarele sunt oprite prin urmare trebuie pornite
      motor2.run(BACKWARD);
      motor3.run(FORWARD);
      motor4.run(FORWARD);
    
      motor3.run(BACKWARD);
      motor4.run(BACKWARD);
     motor3.setSpeed(200);
     motor4.setSpeed(200);  
     delay(2000);
     motor3.run(FORWARD);
      motor4.run(FORWARD);
  }
  
  // back
  if(directie[0] == 0 && directie[1] == 0 && directie[2] == 0 && directie[3] == 1){
    motor1.run(FORWARD);                          // functioneaza == 0 -> motoarele sunt oprite prin urmare trebuie pornite
      motor2.run(FORWARD);
      motor3.run(BACKWARD);
      motor4.run(BACKWARD);
      motor1.setSpeed(200);
     motor2.setSpeed(200);  
     motor3.setSpeed(200);
     motor4.setSpeed(200);  
     delay(1000);
     motor1.run(BACKWARD);                          // functioneaza == 0 -> motoarele sunt oprite prin urmare trebuie pornite
      motor2.run(BACKWARD);
      motor1.setSpeed(250);
     motor2.setSpeed(250);  
     motor3.setSpeed(250);
     motor4.setSpeed(250);  
     delay(1000);
      motor3.run(FORWARD);
      motor4.run(FORWARD);
  }


  
}
